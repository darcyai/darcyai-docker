trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - CHANGELOG.md
pr: none
  
pool: 'Azure Pipelines'

variables:
  DOCKER_CLI_EXPERIMENTAL: enabled
  imageName: 'darcyai/darcy-ai'
  imageTag: 'dev'

steps:
- script: |
    RELEASE_TAG=$(git describe --tags --abbrev=0)
    echo "##vso[task.setvariable variable=imageTag]$RELEASE_TAG"
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  displayName: 'Set image tag'

- script: |
    sudo apt-get install -y qemu-user-static
    sudo apt-get install -y binfmt-support
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  displayName: 'Install prerequisites'

- script: |
    docker buildx create --name darcyai-builder
    docker buildx use darcyai-builder
  displayName: 'Setup docker buildx builder'

- task: Docker@2
  displayName: Login to Dockerhub
  inputs:
    command: login
    containerRegistry: DarcyAI-Dockerhub

- script: |
    docker buildx build -t $(imageName)-base:$(imageTag) \
      --platform linux/amd64,linux/arm64,linux/arm/v7 \
      --build-arg BASE_IMAGE_TAG=$(imageTag) \
      --file base/Dockerfile .
  displayName: 'Build and push base images'

- script: |
    docker run --rm \
      -v $(pwd)/tests:/src \
      $(imageName)-base:$(imageTag) \
      sh -c "cd /src && python3 -m pip install darcyai && python3 -u base.py"
  displayName: 'Test base docker image'

- script: |
    docker buildx build -t $(imageName)-coral:$(imageTag) \
      --platform linux/amd64,linux/arm64,linux/arm/v7 \
      --build-arg BASE_IMAGE_TAG=$(imageTag) \
      --file coral/Dockerfile .
  displayName: 'Build and push coral images'

- script: |
    docker run --rm \
      -v $(pwd)/tests:/src \
      $(imageName)-coral:$(imageTag) \
      sh -c "cd /src && python3 -m pip install darcyai && python3 -u coral.py"
  displayName: 'Test coral docker image'

- script: |
    docker buildx build -t $(imageName)-cpu:$(imageTag) \
      --platform linux/amd64,linux/arm64,linux/arm/v7 \
      --build-arg BASE_IMAGE_TAG=$(imageTag) \
      --file cpu/Dockerfile .
  displayName: 'Build and push cpu images'

- script: |
    docker run --rm \
      -v $(pwd)/tests:/src \
      $(imageName)-cpu:$(imageTag) \
      sh -c "cd /src && python3 -m pip install darcyai && python3 -u cpu.py"
  displayName: 'Test cpu docker image'
