trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - CHANGELOG.md
pr: none
  
jobs:
  - job: DarcyAIDockerImages

    timeoutInMinutes: 240
  
    strategy:
      matrix:
        x86:
          poolImageName: 'Azure Pipelines'
          imageNameSuffix: 'x86'
          isArm: ""
        armv7l:
          poolImageName: 'RPi'
          imageNameSuffix: 'armv7l'
          isArm: "true"
        arm64:
          poolImageName: 'build-farm-coral'
          imageNameSuffix: 'arm64'
          isArm: ""

    pool: $(poolImageName)

    variables:
      imageName: 'edgeworx/darcy-ai'
      imageTag: 'dev'

    steps:
      - script: |
          RELEASE_TAG=$(git describe --tags --abbrev=0)
          echo "##vso[task.setvariable variable=imageTag]$RELEASE_TAG"
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
        displayName: 'Set image tag'

      - template: ./docker-task-template.yml
        parameters:
          imageName: '$(imageName)-base-$(imageNameSuffix)'
          imageTag: $(imageTag)
          dockerFile: 'base/Dockerfile'
          imageNameSuffix: '$(imageNameSuffix)'
          isArm: '$(isArm)'
          step: 'base'

      - script: |
          docker run --rm \
            -v $(pwd)/tests:/src \
            $(imageName)-base-$(imageNameSuffix):$(imageTag) \
            sh -c "cd /src && python3 -m pip install darcyai-engine && python3 -u base.py"
        displayName: 'Test base docker image'

      - template: ./docker-task-template.yml
        parameters:
          imageName: '$(imageName)-coral-$(imageNameSuffix)'
          imageTag: $(imageTag)
          dockerFile: 'coral/Dockerfile'
          imageNameSuffix: '$(imageNameSuffix)'
          isArm: '$(isArm)'
          step: 'coral'

      - script: |
          docker run --rm \
            -v $(pwd)/tests:/src \
            $(imageName)-coral-$(imageNameSuffix):$(imageTag) \
            sh -c "cd /src && python3 -m pip install darcyai-coral && python3 -u coral.py"
        displayName: 'Test coral docker image'
